
# Subscribe and receive OpenConfig Telemetry data using JTI
[[inputs.jti_openconfig_telemetry]]
  ## List of device addresses to collect telemetry from
  #servers = ["10.48.188.97:50051",
  #           "10.48.188.98:50051",
  #           "10.48.188.9:50051"
  #          ]
  servers = [
             "10.161.35.118:50051",
            ]

  ## Authentication details. Username and password are must if device expects
  ## authentication. Client ID must be unique when connecting from multiple instances
  ## of telegraf to the same device
  username = "jnpr"
  password = "pass123"
  client_id = "telegraf"

  ## Frequency to get data
  sample_frequency = "10000ms"

  ## Sensors to subscribe for
  ## A identifier for each sensor can be provided in path by separating with space
  ## Else sensor path will be used as identifier
  ## When identifier is used, we can provide a list of space separated sensors.
  ## A single subscription will be created with all these sensors and data will
  ## be saved to measurement with this identifier name
  # "5m collection /components/ /lldp",
  sensors = [
   "60s interfaces /interfaces/interface",
   "60s qmon-sw /junos/system/linecard/qmon-sw/",
   "1m  /components",
   "60s /junos/system/linecard/npu/memory",
   "60s /junos/system/linecard/npu/utilization",
   "0s  events /junos/events",
   "0s  events/commits /junos/events/event[id='UI_COMMIT_COMPLETED']",
   "0s  events/bgp /junos/events/event[id='BGP']",
   "30s /network-instances/network-instance/protocols/protocol/bgp",
  ]

  ## We allow specifying sensor group level reporting rate. To do this, specify the
  ## reporting rate in Duration at the beginning of sensor paths / collection
  ## name. For entries without reporting rate, we use configured sample frequency
  #sensors = [
  # "1000ms customReporting /interfaces /lldp",
  # "2000ms collection /components",
  # "/interfaces",
  #]

  ## Optional TLS Config
  # enable_tls = true
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = true

  ## Delay between retry attempts of failed RPC calls or streams. Defaults to 1000ms.
  ## Failed streams/calls will not be retried if 0 is provided
  retry_delay = "10000ms"

  ## To treat all string values as tags, set this to true
  str_as_tags = false

[[processors.regex]]
  namepass = ["/components"]
  order = 1
  [[processors.regex.fields]]
    key = "/components/component/properties/property/state/value"
    pattern = "^(\\d+\\.?\\d*)$"
    replacement = "${1}"
    result_key = "/components/component/properties/property/state/value_f"

[[processors.regex]]
  namepass = ["/components"]
  order = 2
  [[processors.regex.fields]]
    key = "/components/component/properties/property/state/value"
    pattern = "^(\\d+) degrees C / (\\d+) degrees F$"
    replacement = "${1}"
    result_key = "/components/component/properties/property/state/value_f"

[[processors.converter]]
  namepass = ["/components"]
  order = 3
  [processors.converter.fields]
    float = ["/components/component/properties/property/state/value_f"]

[[processors.converter]]
  namepass = ["/components"]
  order = 4
  [processors.converter.fields]
    string = ["/components/component/properties/property/state/value"]


